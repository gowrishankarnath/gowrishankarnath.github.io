<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Software Artist - programming</title><link href="https://www.gowrishankarnath.com/" rel="alternate"></link><link href="https://www.gowrishankarnath.com/tag/programming/feeds/atom.xml" rel="self"></link><id>https://www.gowrishankarnath.com/</id><updated>2020-08-23T16:52:00+05:30</updated><subtitle>My Throughts, My Learning</subtitle><entry><title>Model question papers for Python Programming course as prescribed for 3rd semester Computer Science and Engineering programme</title><link href="https://www.gowrishankarnath.com/model-question-papers-for-python-programming-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme.html" rel="alternate"></link><published>2019-08-24T22:28:00+05:30</published><updated>2019-08-26T17:06:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2019-08-24:/model-question-papers-for-python-programming-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme.html</id><summary type="html">&lt;p&gt;Model question papers and question bank for Python programming course prescribed at Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt; for the department of Computer Science and&amp;nbsp;Engineering.&lt;/p&gt;</summary><content type="html">&lt;p&gt;You will find the model question papers and question bank for the Python programming course prescribed for third semester at the department of Computer Science and Engineering, Dr.Ambedkar Institute of Technology,&amp;nbsp;Bengaluru.&lt;/p&gt;
&lt;h2&gt;&lt;font color = black&gt; &lt;strong&gt;Model Question Paper 1  &lt;/strong&gt; &lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;Click on the link below to view or download the model question paper&amp;nbsp;1.  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/gowrishankarnath/Python_MQPs/raw/master/Python_Model_Question_Paper_1.doc" target = "_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt; &lt;span class="caps"&gt;MQP&lt;/span&gt; - 1&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;font color = black&gt; &lt;strong&gt; Model Question Paper 2  &lt;/strong&gt; &lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;Click on the link below to view or download the model question paper&amp;nbsp;2.  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/gowrishankarnath/Python_MQPs/raw/master/Python_Model_Question_Paper_2.doc" target = "_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt; &lt;span class="caps"&gt;MQP&lt;/span&gt; - 2&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;font color = black&gt; &lt;strong&gt; Question Bank  &lt;/strong&gt; &lt;/font&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;font color = black&gt; &lt;strong&gt; Unit 1.  &lt;/strong&gt; &lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Explain the different string formats available in Python with examples. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Discuss the int(), float(), str(), chr() and complex() type conversion functions with examples. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Discuss the ord(), hex(), oct(), complex() and float() type conversion functions with examples. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Describe the &lt;strong&gt;is&lt;/strong&gt; and &lt;strong&gt;is not&lt;/strong&gt; operators and type() function. Also, discuss why Python is called as dynamic and strongly typed language. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Illustrate the different types of control flow statements available in Python with flowcharts. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Write a Program to Prompt for a Score between 0.0 and 1.0. If the Score is out of range, print an error. If the score is between 0.0 and 1.0, print a grade using the following table   &lt;code&gt;6 Marks&lt;/code&gt;     &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="images\article_17_image_1.jpg" alt="table" align="middle" height = 150, width = 100&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Write a program to display the fibonacci sequences up to nth term where n is provided by the user. &lt;code&gt;7 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Write a program to repeatedly check for the largest number until the user enters &lt;strong&gt;&amp;#8220;done&amp;#8221;&lt;/strong&gt;. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Write a program to find the sum of all Odd and Even numbers up to a number specified by the user. &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Explain the need for &lt;strong&gt;continue&lt;/strong&gt; and &lt;strong&gt;break&lt;/strong&gt; statements. Write a program to check whether a number is prime or not. Prompt the user for input. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11.&lt;/strong&gt; Describe the need for catching exceptions using try and except statements. &lt;code&gt;10 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12.&lt;/strong&gt; Describe the syntax for the following functions and explain with an example.&lt;br&gt;
a) abs() b) max() c) divmod() d) pow() e) len()  &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13.&lt;/strong&gt; Write Pythonic code to solve the quadratic equation ax**2 + bx + c = 0 by getting input for coefficients from the user. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14.&lt;/strong&gt; Find the area and perimeter of a circle using functions. Prompt the user for input. &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;15.&lt;/strong&gt; Write a Python program using functions to find the value of nPr and nCr without using inbuilt factorial() function. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;16.&lt;/strong&gt; Write a program to print the sum of the following series
1 + 1/2 + 1/3 +. …. + 1/n  &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;font color = black&gt; &lt;strong&gt;Unit 2.  &lt;/strong&gt; &lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Write Python program to replace comma-separated words with hyphens and print hyphen-separated words in ascending order. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Explain the need for Unicodes. &lt;code&gt;5 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Discuss the following list functions&lt;br&gt;
a) len() b) sum() c) any() d) all() e) sorted()  &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Explain the following list methods with an example.
a) append() b) extend() c) insert() d) index() e) sort() &lt;code&gt;5 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Check if the items in the list are sorted in ascending or descending order and print suitable messages accordingly. Otherwise, print &amp;#8220;Items in list are not sorted&amp;#8221; &lt;code&gt;7 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Write Pythonic code to multiply two matrices using nested loops and also perform transpose of the resultant matrix. &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;font color = black&gt; &lt;strong&gt;Unit 3.  &lt;/strong&gt; &lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Write Python program to sort words in a sentence in decreasing order of their length. Display the sorted words along with their length. &lt;code&gt;7 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Write a function which receives a variable number of strings as arguments. Find unique characters in each string. &lt;code&gt;6 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Write Pythonic code to create a function called most_frequent that takes a string and prints the letters in decreasing order of frequency. Use dictionaries. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Consider the string &amp;#8216;brontosaurus&amp;#8217;. Write Pythonic code that implements and returns the functionality of histogram using dictionaries for the given string. Also, write the function &lt;strong&gt;print_hist()&lt;/strong&gt; to print the keys and their values in alphabetical order from the values returned by the histogram function. &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Write Pythonic code that implements and returns the functionality of histogram using dictionaries. Also, write the function print_hist to print the keys and their values in alphabetical order from the values returned by the histogram function. &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;font color = black&gt; &lt;strong&gt;Unit 4.  &lt;/strong&gt; &lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Describe the different access modes of the files with an example. &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Discuss the following methods associated with the file object&lt;br&gt;
a) read() b) readline() c) readlines() d) tell() e) seek() f) write() &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Write Python Program to Reverse Each Word in &amp;#8220;secret_societies.txt&amp;#8221; file. &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Write Python Program to Count the Occurrences of Each Word and Also Count the Number of Words in a &amp;#8220;quotes.txt&amp;#8221; File. &lt;code&gt;7 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Write Python Program to Find the Longest Word in a File. Get the File Name from User. &lt;code&gt;7 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Consider a File Called &amp;#8220;workfile&amp;#8221;. Write Python Program to Read and Print Each Byte in the Binary File. &lt;code&gt;5 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Write Python program to demonstrate the writing of data to a &lt;span class="caps"&gt;CSV&lt;/span&gt; file using DictWriter class. &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Discuss the following methods supported by compiled regular expression objects.&lt;br&gt;
a) search() b) match() c) findall() &lt;code&gt;6 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Why do you need regular expressions in Python? Consider a file “ait.txt”. Write a Python program to read the file and look for lines of the form 
X-&lt;span class="caps"&gt;DSPAM&lt;/span&gt;-Confidence: 0.8475
X-&lt;span class="caps"&gt;DSPAM&lt;/span&gt;-Probability: 0.458
Extract the number from each of the lines using a regular expression. Compute the average of the numbers and print out the average. &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Consider a line &amp;#8220;From stephen.marquard\@uct.ac.za Sat Jan 5 09:14:16 2008&amp;#8221; in the file email.txt. Write Pythonic code to read the file and extract email address from the lines starting from the word &amp;#8220;From&amp;#8221;. Use regular expressions to match email address. &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;font color = black&gt; &lt;strong&gt;Unit 5.  &lt;/strong&gt; &lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Write Python program to calculate the Arc Length of an Angle by assigning values to the radius and angle data attributes of the class ArcLength. &lt;code&gt;7 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Write Python Program to simulate a Bank Account with support for depositMoney, withdrawMoney and showBalance Operations. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Given three Points (x1, y1), (x2, y2) and (x3, y3), write a Python program to check if they are Collinear. &lt;code&gt;7 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Discuss inheritance in Python programming language. Write a Python program to demonstrate the use of super() function. &lt;code&gt;10 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Program to demonstrate the Overriding of the Base Class method in the Derived Class. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Write Python program to demonstrate Multiple Inheritance. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Given the Coordinates (x, y) of a center of a Circle and its radius, write Python program to determine whether the Point lies inside the Circle, on the Circle or outside the Circle. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Write Python Program to Demonstrate Multiple Inheritance with Method Overriding. &lt;code&gt;8 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Write Pythonic code to overload &amp;#8220;+&amp;#8221;, &amp;#8220;-&amp;#8221; and &amp;#8220;*&amp;#8221; operators by providing the methods __add__, __sub__ and __mul__. &lt;code&gt;8 Marks&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Write Pythonic code to create a function named &lt;strong&gt;move_rectangle()&lt;/strong&gt; that takes an object of &lt;strong&gt;Rectangle&lt;/strong&gt; class and two numbers named &lt;strong&gt;dx&lt;/strong&gt; and &lt;strong&gt;dy&lt;/strong&gt;. It should change the location of the Rectangle by adding dx to the x coordinate of corner and adding dy to the y coordinate of corner. &lt;code&gt;10 Marks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;NOTE: Marks allocated to all the questions are tentative. It may vary.&lt;/code&gt;&lt;/strong&gt;  &lt;/p&gt;</content><category term="Articles"></category><category term="Python"></category><category term="programming"></category><category term="course"></category><category term="questions"></category><category term="Dr.AIT"></category></entry><entry><title>Syllabus and Solutions for Python Programming laboratory course as prescribed for 3rd semester Computer Science and Engineering programme starting from the year 2019</title><link href="https://www.gowrishankarnath.com/syllabus-and-solutions-for-python-programming-laboratory-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html" rel="alternate"></link><published>2019-05-20T18:38:00+05:30</published><updated>2020-08-23T14:16:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2019-05-20:/syllabus-and-solutions-for-python-programming-laboratory-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html</id><summary type="html">&lt;p&gt;Syllabus and Solutions for the Python Programming laboratory prescribed for &lt;span class="caps"&gt;CSE&lt;/span&gt; department starting from the year 2019, Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the syllabus and solutions for Python Programming Laboratory course prescribed for 3rd Semester Undergraduate Computer Science and Engineering Programme starting from the year 2019 at Dr.Ambedkar Institute of Technology (Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;), Bengaluru, Karnataka,&amp;nbsp;India.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Course Title:&lt;/strong&gt;  &lt;strong&gt;Python Programming Laboratory&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Course Code: &lt;span class="caps"&gt;18CSL38&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Exam Duration: 3 Hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of Credits: 1 = 0: 0: 1 (L: T: P)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of Laboratory Hours/Week: 2&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Interpret the use of procedural statements like assignments, conditional statements, loops and function&amp;nbsp;calls.&lt;/li&gt;
&lt;li&gt;Infer the supported data structures like lists, dictionaries and tuples in&amp;nbsp;Python.&lt;/li&gt;
&lt;li&gt;Illustrate the application of matrices and regular expressions in building the Python&amp;nbsp;programs.&lt;/li&gt;
&lt;li&gt;Discover the use of external modules in creating excel files and navigating the file&amp;nbsp;systems.&lt;/li&gt;
&lt;li&gt;Describe the need for Object-oriented programming concepts in&amp;nbsp;Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;table style="border-collapse: collapse; border: none;"&gt;
&lt;tbody&gt;
&lt;tr style="height: 15.25pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 15.25pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;Sl.&amp;nbsp;No.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border: solid windowtext 1.0pt; border-left: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 15.25pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;Programs&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 15.8pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 15.8pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;1.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 15.8pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;a) Write a Python program to print all the Disarium numbers between 1 and&amp;nbsp;100.&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;b) Write a Python program to encrypt the text using Caesar Cipher technique. Display the encrypted text. Prompt the user for input and the shift pattern.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_1.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 21.4pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 21.4pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;2.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 21.4pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Devise a Python program to implement the Rock-Paper-Scissor game.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_2.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 35.15pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 35.15pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;3.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 35.15pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Write a Python program to perform Jump Search for a given key and report success or failure. Prompt the user to enter the key and a list of numbers.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_3.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 46.3pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 46.3pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;4.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 46.3pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;The celebrity problem is the problem of finding the celebrity among n people. A celebrity is someone who does not know anyone (including themselves) but is known by everyone. Write a Python program to solve the celebrity problem.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_4.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 31.05pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 31.05pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;5.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 31.05pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Write a Python program to construct a linked list. Prompt the user for input. Remove any duplicate numbers from the linked list.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_5.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 65.45pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;6.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Perform the following file operations using&amp;nbsp;Python&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;a) Traverse a path and display all the files and subdirectories in each level till the deepest level for a given path. Also, display the total number of files and&amp;nbsp;subdirectories.&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;b) Read a file content and copy only the contents at odd lines into a new file.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_6.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 65.45pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;7.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Create a menu drive Python program with a dictionary for words and their meanings. Write functions to add a new entry (word: meaning), search for a particular word and retrieve meaning, given meaning find words with the same meaning, remove an entry, display all words sorted alphabetically.&lt;/span&gt;&lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_7.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 65.45pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;8.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times; color: black;"&gt;Using Regular Expressions, develop a Python program&amp;nbsp;to&lt;/span&gt;&lt;/p&gt;
&lt;p style="text-align: justify; text-indent: -18.0pt; margin: 0cm 0cm .0001pt 18.0pt;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;span style="line-height: 115%; color: black;"&gt;a)&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="line-height: 115%; color: black;"&gt;Identify a word with a sequence of one upper case letter followed by lower case&amp;nbsp;letters.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="text-align: justify; text-indent: -18.0pt; margin: 0cm 0cm .0001pt 18.0pt;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;span style="line-height: 115%; color: black;"&gt;b)&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="line-height: 115%; color: black;"&gt;Find all the patterns of &amp;ldquo;1(0+)1&amp;rdquo; in a given&amp;nbsp;string.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="text-align: justify; text-indent: -18.0pt; margin: 0cm 0cm .0001pt 18.0pt;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;span style="line-height: 115%; color: black;"&gt;c)&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="line-height: 115%; color: black;"&gt;Match a word containing &amp;lsquo;z&amp;rsquo; followed by one or more&amp;nbsp;o&amp;rsquo;s.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times; color: black;"&gt;Prompt the user for input.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_8.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 65.45pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;9.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 65.45pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Write a Python program to plot the Line chart in &lt;span class="caps"&gt;MS&lt;/span&gt; Excel Sheet using XlsxWriter module to display the annual net income of the companies mentioned&amp;nbsp;below.&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-bottom: .0001pt; text-align: left;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;&amp;nbsp;&lt;/span&gt;
&lt;a href="../images/article_14_image_1.jpg" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;&lt;span class="caps"&gt;MS&lt;/span&gt; Excel Data&lt;/font&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_9.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 14.85pt;"&gt;
&lt;td style="border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 14.85pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: center; text-autospace: none;"&gt;&lt;span style="font-size: 14pt; font-family: 'times new roman', times;"&gt;&lt;strong&gt;&lt;span style="line-height: 115%;"&gt;10.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 14.85pt;"&gt;
&lt;p style="margin-bottom: .0001pt; text-align: justify;"&gt;&lt;span style="font-size: 14pt; line-height: 115%; font-family: 'times new roman', times;"&gt;Devise a Python program to implement the Hangman Game.&lt;/span&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://nbviewer.jupyter.org/github/gowrishankarnath/Dr.AIT_Python_Lab_2019/blob/master/Program_10.ipynb" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Solution&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;Outcomes&lt;/strong&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-dbbi{font-weight:bold;font-family:"Times New Roman", Times, serif !important;;font-size:18px;border-color:inherit;text-align:center;vertical-align:top}
.tg .tg-gvzw{font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:left}
.tg .tg-w6fb{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
      &lt;th class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;COs&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;center&gt;Statements&lt;/center&gt;&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;Bloom&amp;#8217;s Level&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Describe the Python language syntax including control statements, loops and functions to write programs for a wide variety problem in mathematics, science, and games.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Examine the core data structures like lists, dictionaries, tuples and sets in Python to store, process and sort the data.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Interpret the concepts of Object-oriented programming as used in Python using encapsulation, polymorphism and inheritance.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Discover the capabilities of Python regular expression for data verification and utilize matrices for building performance efficient Python programs.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Identify the external modules for creating and writing data to excel files and inspect the file operations to navigate the file systems.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course Articulation Matrix (&lt;span class="caps"&gt;CO&lt;/span&gt;-&lt;span class="caps"&gt;PO&lt;/span&gt;&amp;nbsp;Mapping)&lt;/strong&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-v08z{font-weight:bold;font-size:16px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center;vertical-align:top}
.tg .tg-2oic{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:left}
.tg .tg-htlq{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center}
.tg .tg-nxv2{font-size:16px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
    &lt;th class="tg-2oic" rowspan="2"&gt;COs&lt;/th&gt;
    &lt;th class="tg-htlq" colspan="12"&gt;&lt;center&gt;POs&lt;/center&gt;&lt;/th&gt;
    &lt;th class="tg-htlq" colspan="3"&gt;&lt;center&gt;PSOs&lt;/center&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO1&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO2&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO3&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO4&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO5&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO6&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO7&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO8&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO9&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO10&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO11&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO12&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PSO1&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PSO2&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PSO3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;</content><category term="Articles"></category><category term="Python"></category><category term="Programming"></category><category term="Laboratory"></category><category term="Course"></category><category term="Syllabus"></category><category term="Dr.AIT"></category></entry><entry><title>Syllabus for Python Programming Course as Prescribed for 3rd Semester Computer Science and Engineering Programme Starting from the year 2019</title><link href="https://www.gowrishankarnath.com/syllabus-for-python-programming-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html" rel="alternate"></link><published>2019-05-14T14:36:00+05:30</published><updated>2020-08-23T16:52:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2019-05-14:/syllabus-for-python-programming-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html</id><summary type="html">&lt;p&gt;Python Programming syllabus prescribed for &lt;span class="caps"&gt;CSE&lt;/span&gt; department starting from the year 2019, Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the &lt;strong&gt;Python Programming&lt;/strong&gt; syllabus prescribed for the 3rd Semester Undergraduate students of Computer Science and Engineering department and also offered as InterDepartmental Elective (&lt;span class="caps"&gt;IDE&lt;/span&gt;) for the 5th Semester students starting from the year 2019 at Dr.Ambedkar Institute of Technology (Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;), Bengaluru, Karnataka,&amp;nbsp;India. &lt;/p&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Course Title:  &lt;span class="caps"&gt;PYTHON&lt;/span&gt; &lt;span class="caps"&gt;PROGRAMMING&lt;/span&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Course Code: &lt;span class="caps"&gt;18CS34&lt;/span&gt;/&lt;span class="caps"&gt;18CSE012&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Exam Duration: 3 hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of Credits: 3= 3: 0: 0 (L: T: P)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of lecture hours/week: 3 Hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total No. of Contact Hours: 42 Hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Describe the core syntax and semantics of Python programming&amp;nbsp;language. &lt;/li&gt;
&lt;li&gt;Discover the need for working with the strings and&amp;nbsp;functions.&lt;/li&gt;
&lt;li&gt;Illustrate the process of structuring the data using lists, dictionaries, tuples and&amp;nbsp;sets. &lt;/li&gt;
&lt;li&gt;Indicate the use of regular expressions and built-in functions to navigate the file&amp;nbsp;system.&lt;/li&gt;
&lt;li&gt;Infer the Object-oriented Programming concepts in&amp;nbsp;Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-fzq1{border-color:inherit;font-family:Arial, Helvetica, sans-serif !important;;font-size:16px;text-align:left;
  vertical-align:top}
.tg .tg-288q{border-color:inherit;font-family:Arial, Helvetica, sans-serif !important;;font-size:16px;font-weight:bold;
  text-align:center;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class="tg-288q"&gt;   &lt;br&gt;Unit &lt;br&gt;No   &lt;/th&gt;
    &lt;th class="tg-288q"&gt;   &lt;br&gt;Syllabus Content   &lt;/th&gt;
    &lt;th class="tg-288q"&gt;   &lt;br&gt;No of &lt;br&gt;Hours   &lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-fzq1"&gt;   &lt;br&gt;&lt;span style="font-weight:bold"&gt;Parts of Python Programming Language,&lt;/span&gt; Identifiers, Keywords, Statements and Expressions, Variables, Operators, Precedence and Associativity, Data Types, Indentation, Comments, Reading Input, Print Output, Type Conversions, The type() Function and Is Operator, Dynamic and Strongly Typed Language, &lt;span style="font-weight:bold"&gt;Control Flow Statements,&lt;/span&gt; The if  Decision Control Flow Statement, The if…else Decision Control Flow Statement, The if…elif…else Decision Control Statement, Nested if Statement, The while Loop, The for Loop, The continue and break Statements, Catching Exceptions Using try and except Statement, &lt;span style="font-weight:bold"&gt;Functions,&lt;/span&gt; Built-In Functions, Commonly Used Modules, Function Definition and Calling the Function, The return Statement and void Function, Scope and Lifetime of   Variables, Default Parameters, Keyword Arguments, *args and **kwargs, Command Line Arguments. &lt;/td&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;09&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-fzq1"&gt;&lt;span style="font-weight:bold"&gt;Strings,&lt;/span&gt; Creating and Storing Strings, Basic String Operations, Accessing Characters in String by Index Number, String Slicing and Joining, String Methods, Formatting Strings, &lt;span style="font-weight:bold"&gt;Lists,&lt;/span&gt; Creating Lists, Basic List Operations, Indexing and Slicing in Lists, Built-In Functions Used on Lists, List Methods, The del Statement.&lt;/td&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;08&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-fzq1"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;SELF&lt;/span&gt;-&lt;span class="caps"&gt;STUDY&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style="font-weight:bold"&gt;Dictionaries&lt;/span&gt;, Creating Dictionary, Accessing and Modifying key:value Pairs in Dictionaries, Built-In Functions Used on Dictionaries, Dictionary Methods, The del Statement, &lt;span style="font-weight:bold"&gt;Tuples and Sets,&lt;/span&gt; Creating Tuples, Basic Tuple Operations, Indexing and Slicing in Tuples, Built-In Functions Used on Tuples, Relation between Tuples and Lists, Relation between Tuples and Dictionaries, Tuple Methods, Using zip() Function, Sets, Set Methods, Traversing of Sets, Frozenset.&lt;/td&gt;
    &lt;td class="tg-288q"&gt;   &lt;br&gt;08   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-fzq1"&gt;   &lt;br&gt;&lt;span style="font-weight:bold"&gt;Files,&lt;/span&gt; Types of Files, Creating and Reading Text Data, File Methods to Read and Write Data, Reading and Writing Binary Files, The Pickle Module, Reading and Writing &lt;span class="caps"&gt;CSV&lt;/span&gt; Files, Python os and os.path Modules, &lt;span style="font-weight:bold"&gt;Regular Expression Operations,&lt;/span&gt; Using Special Characters, Regular Expression Methods, Named Groups in Python Regular Expressions, Regular Expression with glob Module. &lt;/td&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;08&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-fzq1"&gt;   &lt;br&gt;&lt;span style="font-weight:bold"&gt;Object-Oriented Programming,&lt;/span&gt; Classes and Objects, Creating Classes in Python, Creating Objects in Python, The Constructor Method, Classes with Multiple Objects, Class Attributes versus Data Attributes, Encapsulation, Inheritance, The Polymorphism.  &lt;/td&gt;
    &lt;td class="tg-288q"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;09&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;Outcomes:&lt;/strong&gt; &lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:"Times New Roman", Times;font-size:18px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:"Times New Roman", Times;font-size:18px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-1syg{font-weight:bold;font-size:20px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center}
.tg .tg-gvzw{font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:left}
.tg .tg-w6fb{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
      &lt;th class="tg-1syg"&gt;&lt;span style="font-weight:bold"&gt;COs&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-1syg"&gt;&lt;span style="font-weight:bold"&gt;Statements&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-1syg"&gt;&lt;span style="font-weight:bold"&gt;Bloom&amp;#8217;s Level&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Interpret the fundamental Python syntax and semantics and be fluent in the use of Python control flow statements.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Express proficiency in the handling of strings and functions.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Determine the methods to create and manipulate Python programs by utilizing the data structures like lists, dictionaries, tuples and sets.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Identify the commonly used operations involving file systems and regular expressions.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Articulate the Object-Oriented Programming concepts such as encapsulation, inheritance and polymorphism as used in Python.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;​                                           &lt;strong&gt;Course Articulation Matrix (&lt;span class="caps"&gt;CO&lt;/span&gt;-&lt;span class="caps"&gt;PO&lt;/span&gt;&amp;nbsp;Mapping)&lt;/strong&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-qoop{font-family:"Times New Roman", Times, serif !important;;font-size:15px;font-weight:bold;text-align:center;
  vertical-align:top}
.tg .tg-106g{font-family:"Times New Roman", Times, serif !important;;font-size:15px;text-align:center;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class="tg-qoop"&gt;   &lt;br&gt;&lt;span class="caps"&gt;CO&lt;/span&gt;-&lt;span class="caps"&gt;PO&lt;/span&gt; &lt;br&gt;Mapping   &lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO1&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO2&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO3&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO4&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO5&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO6&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO7&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO8&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO9&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO10&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO11&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
    &lt;th class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;PO12&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-qoop"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
    &lt;td class="tg-106g"&gt;   &lt;br&gt;-   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;TEXT&lt;/span&gt; &lt;span class="caps"&gt;BOOK&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gowrishankar S, Veena A, &lt;strong&gt;&amp;#8220;Introduction to Python Programming&amp;#8221;,&lt;/strong&gt; 1st Edition, &lt;span class="caps"&gt;CRC&lt;/span&gt; Press/Taylor &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Francis, 2018. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-0815394372&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;REFERENCE&lt;/span&gt; &lt;span class="caps"&gt;BOOKS&lt;/span&gt; / &lt;span class="caps"&gt;WEBLINKS&lt;/span&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Jake VanderPlas, &lt;strong&gt;&amp;#8220;Python Data Science Handbook: Essential Tools for Working with Data&amp;#8221;,&lt;/strong&gt; 1st Edition, O&amp;#39;Reilly Media, 2016. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-1491912058  &lt;/li&gt;
&lt;li&gt;Aurelien Geron, &lt;strong&gt;&amp;#8220;Hands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems&amp;#8221;,&lt;/strong&gt; 2nd Edition, O’Reilly Media, 2019. &lt;span class="caps"&gt;ISBN&lt;/span&gt; – 13:&amp;nbsp;978-9352139057.  &lt;/li&gt;
&lt;li&gt;Wesley J Chun, &lt;strong&gt;&amp;#8220;Core Python Applications Programming&amp;#8221;,&lt;/strong&gt; 3rd Edition, Pearson Education India, 2015. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-9332555365  &lt;/li&gt;
&lt;li&gt;Miguel Grinberg, &lt;strong&gt;&amp;#8220;Flask Web Development: Developing Web Applications with Python&amp;#8221;,&lt;/strong&gt; 2nd Edition, O&amp;#39;Reilly Media, 2018. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-1491991732.  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SELF&lt;/span&gt;-&lt;span class="caps"&gt;STUDY&lt;/span&gt; &lt;span class="caps"&gt;REFERENCES&lt;/span&gt;/&lt;span class="caps"&gt;WEBLINKS&lt;/span&gt;:&lt;/h3&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Dictionaries&lt;br&gt;&amp;nbsp;https://www.youtube.com/watch?v=daefaLgNkw0  &lt;/li&gt;
&lt;li&gt;Tuples and Sets&lt;br&gt;&amp;nbsp;https://www.youtube.com/watch?v=W8KRzm-HUcc  &lt;/li&gt;
&lt;/ol&gt;</content><category term="Articles"></category><category term="Python"></category><category term="Programming"></category><category term="Syllabus"></category><category term="Course"></category><category term="Programme"></category><category term="Dr.AIT"></category></entry></feed>