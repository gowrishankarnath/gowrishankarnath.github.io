<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Software Artist - Python</title><link href="https://www.gowrishankarnath.com/" rel="alternate"></link><link href="https://www.gowrishankarnath.com/tag/python/feeds/atom.xml" rel="self"></link><id>https://www.gowrishankarnath.com/</id><updated>2019-05-27T11:11:00+05:30</updated><subtitle>My Throughts, My Learning</subtitle><entry><title>Syllabus and Solutions for Python Programming laboratory course as prescribed for 3rd semester Computer Science and Engineering programme starting from the year 2019</title><link href="https://www.gowrishankarnath.com/syllabus-and-solutions-for-python-programming-laboratory-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html" rel="alternate"></link><published>2019-05-20T18:38:00+05:30</published><updated>2019-05-27T11:11:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2019-05-20:/syllabus-and-solutions-for-python-programming-laboratory-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html</id><summary type="html">&lt;p&gt;Syllabus and Solutions for the Python Programming laboratory prescribed for &lt;span class="caps"&gt;CSE&lt;/span&gt; department starting from the year 2019, Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the syllabus and solutions for Python Programming Laboratory course prescribed for 3rd Semester Undergraduate Computer Science and Engineering Programme starting from the year 2019 at Dr.Ambedkar Institute of Technology (Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;), Bengaluru, Karnataka,&amp;nbsp;India.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Sub Title:&lt;/strong&gt;  &lt;strong&gt;Python Programming Laboratory&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Sub Code: &lt;span class="caps"&gt;18CSL38&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Exam Duration: 3 Hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of Credits: 1 = 0: 0: 1 (L: T: P)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of Lecture Hours/Week: 2&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Interpret the use of procedural statements like assignments, conditional statements, loops and function&amp;nbsp;calls.&lt;/li&gt;
&lt;li&gt;Infer the supported data structures like lists, dictionaries and tuples in&amp;nbsp;Python.&lt;/li&gt;
&lt;li&gt;Illustrate the application of matrices and regular expressions in building the Python&amp;nbsp;programs.&lt;/li&gt;
&lt;li&gt;Discover the use of external modules in creating excel files and navigating the file&amp;nbsp;systems.&lt;/li&gt;
&lt;li&gt;Describe the need for Object-oriented programming concepts in&amp;nbsp;Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-jlrw{font-size:20px;text-align:center}
.tg .tg-hgcj{font-weight:bold;text-align:center}
.tg .tg-9dqs{font-weight:bold;font-size:15px;text-align:center}
.tg .tg-sogj{font-size:18px;text-align:left}
.tg .tg-cbs6{font-size:18px;text-align:left;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
    &lt;th class="tg-jlrw" colspan="2"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PART&lt;/span&gt; - A&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-hgcj"&gt;&lt;span style="font-weight:bold"&gt;Sl. No&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-hgcj"&gt;&lt;span style="font-weight:bold"&gt;Programs&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;1.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Write a Python program to print all Disarium numbers between 1 and 100.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;2.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Write a Python program to encrypt the text using Caesar Cipher technique. Display the encrypted text. Prompt the user for input and the shift pattern.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;3.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Write a Python program to simulate &lt;span class="caps"&gt;ATM&lt;/span&gt; transactions by including the following operations:&lt;br&gt;    a) Check for correctness of the &lt;span class="caps"&gt;ATM&lt;/span&gt; pin.&lt;br&gt;    b) Perform Balance, Withdraw and Deposit Operations.&lt;br&gt;The above operations should be menu-driven and display appropriate messages after performing each of these operations.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;4.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;The celebrity problem is the problem of finding the celebrity among n people. A celebrity is someone who does not know anyone (including themselves) but is known by everyone. Write a Python program to solve the celebrity problem.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;5.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-cbs6"&gt;Write a Python program to construct a linked list. Prompt the user for input. Remove any duplicate numbers from the linked list.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;6.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-cbs6"&gt;Perform the following file operations using Python&lt;br&gt;    a) Traverse a path and display all the files and subdirectories in each level till the deepest level for a given path. Also, display the total number of files and subdirectories.&lt;br&gt;    b) Read a file content and copy only the contents at odd lines into a new file.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-qnmb{font-weight:bold;font-size:20px;text-align:center}
.tg .tg-9dqs{font-weight:bold;font-size:18px;text-align:center}
.tg .tg-sogj{font-size:18px;text-align:left}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
      &lt;th class="tg-qnmb" colspan="2"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PART&lt;/span&gt; - B&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;Sl. No&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;Programs&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;1.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Design a Python program to implement the Rock-Paper-Scissor game.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;2.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Create a menu drive Python program with a dictionary for words and their meanings. Write functions to add a new entry (word: meaning), search for a particular word &lt;br&gt;and retrieve meaning, given meaning find words with the same meaning, remove an entry, display all words sorted alphabetically.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;3.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Design a Python program to perform Jump Search for a given key and report success or failure. Prompt the user to enter the key and a list of numbers.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;4.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Using Regular Expressions, develop a Python program to&lt;br&gt;  a) Identify a word with a sequence of one upper case letter followed by lower case letters.&lt;br&gt;  b) Find all the patterns of “1(0+)1” in a given string.&lt;br&gt;  c) Match a word containing ‘z’ followed by one or more o’s.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;5.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Write a Python program to plot the Line chart in &lt;span class="caps"&gt;MS&lt;/span&gt; Excel Sheet using XlsxWriter module to display the annual net income of the companies mentioned below.&lt;br&gt;&lt;br&gt;&lt;a href="../images/article_14_image_1.jpg"&gt;&lt;span class="caps"&gt;MS&lt;/span&gt; Excel Data&lt;/a&gt;&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-9dqs"&gt;&lt;span style="font-weight:bold"&gt;6.&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-sogj"&gt;Design a Python program to implement the Hangman Game.&lt;br&gt;&lt;br&gt;Solution&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;Outcomes&lt;/strong&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-dbbi{font-weight:bold;font-size:18px;border-color:inherit;text-align:center;vertical-align:top}
.tg .tg-gvzw{font-size:18px;border-color:inherit;text-align:left}
.tg .tg-w6fb{font-weight:bold;font-size:18px;border-color:inherit;text-align:center}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
      &lt;th class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;COs&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;Statements&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;Bloom&amp;#8217;s Level&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Describe the Python language syntax including control statements, loops and functions to write programs for a wide variety problem in mathematics, science, and games.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Examine the core data structures like lists, dictionaries, tuples and sets in Python to store, process and sort the data.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Interpret the concepts of Object-oriented programming as used in Python using encapsulation, polymorphism and inheritance.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Discover the capabilities of Python regular expression for data verification and utilize matrices for building performance efficient Python programs.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Identify the external modules for creating and writing data to excel files and inspect the file operations to navigate the file systems.&lt;/td&gt;
      &lt;td class="tg-dbbi"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course Articulation Matrix (&lt;span class="caps"&gt;CO&lt;/span&gt;-&lt;span class="caps"&gt;PO&lt;/span&gt;&amp;nbsp;Mapping)&lt;/strong&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-v08z{font-weight:bold;font-size:16px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center;vertical-align:top}
.tg .tg-2oic{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:left}
.tg .tg-htlq{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center}
.tg .tg-nxv2{font-size:16px;font-family:"Times New Roman", Times, serif !important;;border-color:inherit;text-align:center;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
    &lt;th class="tg-2oic" rowspan="2"&gt;COs&lt;/th&gt;
    &lt;th class="tg-htlq" colspan="12"&gt;POs&lt;/th&gt;
    &lt;th class="tg-htlq" colspan="3"&gt;PSOs&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO1&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO2&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO3&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO4&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO5&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO6&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO7&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO8&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO9&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO10&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO11&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PO12&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PSO1&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PSO2&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;PSO3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-v08z"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;2&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;3&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;1&lt;/td&gt;
    &lt;td class="tg-nxv2"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;</content><category term="Python"></category><category term="Programming"></category><category term="Laboratory"></category><category term="Course"></category><category term="Syllabus"></category><category term="Dr.AIT"></category></entry><entry><title>Syllabus for Python Programming Course as Prescribed for 3rd Semester Computer Science and Engineering Programme Starting from the year 2019</title><link href="https://www.gowrishankarnath.com/syllabus-for-python-programming-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html" rel="alternate"></link><published>2019-05-14T14:36:00+05:30</published><updated>2019-05-14T14:40:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2019-05-14:/syllabus-for-python-programming-course-as-prescribed-for-3rd-semester-computer-science-and-engineering-programme-starting-from-the-year-2019.html</id><summary type="html">&lt;p&gt;Python Programming syllabus prescribed for &lt;span class="caps"&gt;CSE&lt;/span&gt; department starting from the year 2019, Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the Python Programming syllabus prescribed for 3rd Semester Undergraduate Computer Science and Engineering Programme starting from the year 2019 at Dr.Ambedkar Institute of Technology (Dr.&lt;span class="caps"&gt;AIT&lt;/span&gt;), Bengaluru, Karnataka,&amp;nbsp;India. &lt;/p&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Sub Title:  &lt;span class="caps"&gt;PYTHON&lt;/span&gt; &lt;span class="caps"&gt;PROGRAMMING&lt;/span&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Sub Code: &lt;span class="caps"&gt;18CS35&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Exam Duration: 3 hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of Credits: 4= 4: 0: 0 (L: T: P)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of lecture hours/week: 4 Hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total No. of Contact Hours: 52 Hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Describe the core syntax and semantics of Python programming&amp;nbsp;language. &lt;/li&gt;
&lt;li&gt;Discover the need for working with the strings and&amp;nbsp;functions.&lt;/li&gt;
&lt;li&gt;Illustrate the process of structuring the data using lists, dictionaries, tuples and&amp;nbsp;sets. &lt;/li&gt;
&lt;li&gt;Indicate the use of regular expressions and built-in functions to navigate the file&amp;nbsp;system.&lt;/li&gt;
&lt;li&gt;Infer the Object-oriented Programming concepts in&amp;nbsp;Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-7in8{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;text-align:center;vertical-align:top}
.tg .tg-l9i5{font-weight:bold;font-size:18px;font-family:"Times New Roman", Times, serif !important;;text-align:center}
.tg .tg-fcjq{font-weight:bold;font-size:20px;font-family:"Times New Roman", Times, serif !important;;text-align:center}
.tg .tg-uyrh{font-size:18px;font-family:"Times New Roman", Times, serif !important;;text-align:left;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
    &lt;th class="tg-l9i5"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;UNIT&lt;/span&gt; No&lt;/span&gt;&lt;/th&gt;
    &lt;th class="tg-fcjq"&gt;&lt;span style="font-weight:bold"&gt;Syllabus Content&lt;/span&gt;&lt;/th&gt;
    &lt;th class="tg-fcjq"&gt;No. of Hours&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-fcjq"&gt;&lt;span style="font-weight:bold"&gt;1&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-uyrh"&gt;&lt;span style="font-weight:bold"&gt;Parts of Python Programming Language,&lt;/span&gt; Identifiers, Keywords, Statements and Expressions, Variables, Operators, Precedence and Associativity, Data Types, Indentation, Comments, Reading Input, Print Output, Type Conversions, The type() Function and Is Operator, Dynamic and Strongly Typed Language, &lt;span style="font-weight:bold"&gt;Control Flow Statements,&lt;/span&gt; The if&amp;nbsp;&amp;nbsp;Decision Control Flow Statement, The if…else Decision Control Flow Statement, The if…elif…else Decision Control Statement, Nested if Statement, The while Loop, The for Loop, The continue and break Statements, Catching Exceptions Using try and except Statement, &lt;span style="font-weight:bold"&gt;Functions,&lt;/span&gt; Built-In Functions, Commonly Used Modules, Function Definition and Calling the Function, The return Statement and void Function, Scope and Lifetime of Variables, Default Parameters, Keyword Arguments, *args and **kwargs, Command Line Arguments.&lt;/td&gt;
      &lt;td class="tg-7in8"&gt;&lt;span style="font-weight:bold"&gt;11&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-fcjq"&gt;&lt;span style="font-weight:bold"&gt;2&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-uyrh"&gt;&lt;span style="font-weight:bold"&gt;Strings,&lt;/span&gt; Creating and Storing Strings, Basic String Operations, Accessing Characters in String by Index Number, String Slicing and Joining, String Methods, Formatting Strings, &lt;span style="font-weight:bold"&gt;Lists,&lt;/span&gt; Creating Lists, Basic List Operations, Indexing and Slicing in Lists, Built-In Functions Used on Lists, List Methods, The del Statement.&lt;/td&gt;
      &lt;td class="tg-7in8"&gt;&lt;span style="font-weight:bold"&gt;10&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-fcjq"&gt;&lt;span style="font-weight:bold"&gt;3&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-uyrh"&gt;&lt;span style="font-weight:bold"&gt;Dictionaries,&lt;/span&gt; Creating Dictionary, Accessing and Modifying key:value Pairs in Dictionaries, Built-In Functions Used on Dictionaries, Dictionary Methods, The del Statement, &lt;span style="font-weight:bold"&gt;Tuples and Sets,&lt;/span&gt; Creating Tuples, Basic Tuple Operations, Indexing and Slicing in Tuples, Built-In Functions Used on Tuples, Relation between Tuples and Lists, Relation between Tuples and Dictionaries, Tuple Methods, Using zip() Function, Sets, Set Methods, Traversing of Sets, Frozenset.&lt;/td&gt;
      &lt;td class="tg-7in8"&gt;&lt;span style="font-weight:bold"&gt;10&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-fcjq"&gt;&lt;span style="font-weight:bold"&gt;4&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-uyrh"&gt;&lt;span style="font-weight:bold"&gt;Files,&lt;/span&gt; Types of Files, Creating and Reading Text Data, File Methods to Read and Write Data, Reading and Writing Binary Files, The Pickle Module, Reading and Writing &lt;span class="caps"&gt;CSV&lt;/span&gt; Files, Python os and os.path Modules, &lt;span style="font-weight:bold"&gt;Regular Expression Operations,&lt;/span&gt; Using Special Characters, Regular Expression Methods, Named Groups in Python Regular Expressions, Regular Expression with glob Module.&lt;/td&gt;
      &lt;td class="tg-7in8"&gt;&lt;span style="font-weight:bold"&gt;10&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-fcjq"&gt;&lt;span style="font-weight:bold"&gt;5&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-uyrh"&gt;&lt;span style="font-weight:bold"&gt;Object-Oriented Programming,&lt;/span&gt; Classes and Objects, Creating Classes in Python, Creating Objects in Python, The Constructor Method, Classes with Multiple Objects, Class Attributes versus Data Attributes, Encapsulation, Inheritance, The Polymorphism&lt;/td&gt;
      &lt;td class="tg-7in8"&gt;&lt;span style="font-weight:bold"&gt;11&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Course&amp;nbsp;Outcomes:&lt;/strong&gt; &lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-1syg{font-weight:bold;font-size:20px;border-color:inherit;text-align:center}
.tg .tg-gvzw{font-size:18px;border-color:inherit;text-align:left}
.tg .tg-w6fb{font-weight:bold;font-size:18px;border-color:inherit;text-align:center}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
      &lt;th class="tg-1syg"&gt;&lt;span style="font-weight:bold"&gt;COs&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-1syg"&gt;&lt;span style="font-weight:bold"&gt;Statements&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-1syg"&gt;&lt;span style="font-weight:bold"&gt;Bloom&amp;#8217;s Level&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Interpret the fundamental Python syntax and semantics and be fluent in the use of Python control flow statements.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Express proficiency in the handling of strings and functions.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Determine the methods to create and manipulate Python programs by utilizing the data structures like lists, dictionaries, tuples and sets.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Identify the commonly used operations involving file systems and regular expressions.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L2&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-gvzw"&gt;Articulate the Object-Oriented Programming concepts such as encapsulation, inheritance and polymorphism as used in Python.&lt;/td&gt;
      &lt;td class="tg-w6fb"&gt;&lt;span style="font-weight:bold"&gt;L3&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;​                                           &lt;strong&gt;Course Articulation Matrix (&lt;span class="caps"&gt;CO&lt;/span&gt;-&lt;span class="caps"&gt;PO&lt;/span&gt;&amp;nbsp;Mapping)&lt;/strong&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}
.tg .tg-bobw{font-weight:bold;text-align:center;vertical-align:bottom}
.tg .tg-baqh{text-align:center;vertical-align:top}
.tg .tg-amwm{font-weight:bold;text-align:center;vertical-align:top}
&lt;/style&gt;

&lt;table class="tg"&gt;
  &lt;tr&gt;
      &lt;th class="tg-bobw" rowspan="2"&gt;&lt;span style="font-weight:bold"&gt;COs&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-amwm" colspan="12"&gt;&lt;span style="font-weight:bold"&gt;POs&lt;/span&gt;&lt;/th&gt;
      &lt;th class="tg-amwm" colspan="3"&gt;&lt;span style="font-weight:bold"&gt;PSOs&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO4&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO5&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO6&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO7&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO8&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO9&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO10&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO11&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PO12&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PSO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PSO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td class="tg-amwm"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;PSO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-1wig"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-1wig"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-1wig"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-1wig"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO4&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;1&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td class="tg-1wig"&gt;&lt;span style="font-weight:bold"&gt;&lt;span class="caps"&gt;CO5&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;2&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;3&lt;/td&gt;
    &lt;td class="tg-baqh"&gt;-&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;TEXT&lt;/span&gt; &lt;span class="caps"&gt;BOOK&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gowrishankar S, Veena A, &lt;strong&gt;&amp;#8220;Introduction to Python Programming&amp;#8221;,&lt;/strong&gt; 1st Edition, &lt;span class="caps"&gt;CRC&lt;/span&gt; Press/Taylor &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Francis, 2018. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-0815394372&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;REFERENCE&lt;/span&gt; &lt;span class="caps"&gt;BOOKS&lt;/span&gt; / &lt;span class="caps"&gt;WEBLINKS&lt;/span&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Jake VanderPlas, &lt;strong&gt;&amp;#8220;Python Data Science Handbook: Essential Tools for Working with Data&amp;#8221;,&lt;/strong&gt; 1st Edition, O&amp;#39;Reilly Media, 2016. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-1491912058&lt;/li&gt;
&lt;li&gt;Aurelien Geron, &lt;strong&gt;Hands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems&amp;#8221;,&lt;/strong&gt; 1st Edition,O&amp;#39;Reilly Media, 2017. &lt;span class="caps"&gt;ISBN&lt;/span&gt; – 13:&amp;nbsp;978-1491962299.&lt;/li&gt;
&lt;li&gt;Wesley J Chun, &lt;strong&gt;&amp;#8220;Core Python Applications Programming&amp;#8221;,&lt;/strong&gt; 3rd Edition, Pearson Education India, 2015. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-9332555365&lt;/li&gt;
&lt;li&gt;Miguel Grinberg, &lt;strong&gt;&amp;#8220;Flask Web Development: Developing Web Applications with Python&amp;#8221;,&lt;/strong&gt; 2nd Edition, O&amp;#39;Reilly Media, 2018. &lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&amp;nbsp;978-1491991732.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="Programming"></category><category term="Syllabus"></category><category term="Course"></category><category term="Programme"></category><category term="Dr.AIT"></category></entry><entry><title>Introduction to Python Programming</title><link href="https://www.gowrishankarnath.com/introduction-to-python-programming.html" rel="alternate"></link><published>2019-01-07T02:30:00+05:30</published><updated>2019-05-26T16:49:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2019-01-07:/introduction-to-python-programming.html</id><summary type="html">&lt;p&gt;Introduction to Python Programming authored by Gowrishankar S., and Veena A., and published by &lt;span class="caps"&gt;CRC&lt;/span&gt;&amp;nbsp;Press&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction to Python&amp;nbsp;Programming&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Introduction_to_Python_Programming" src="../images/article_1_image_1.jpg"&gt;.  &lt;/p&gt;
&lt;p&gt;The Git repository for the book containing the code examples from the book &lt;strong&gt;“Introduction to Python Programming”&lt;/strong&gt;, authored by &lt;em&gt;Gowrishankar S.&lt;/em&gt; and &lt;em&gt;Veena A.&lt;/em&gt; and published by &lt;span class="caps"&gt;CRC&lt;/span&gt; Press can be found &lt;a href="https://github.com/gowrishankarnath/Introduction_To_Python_Programming" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;here&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Book&amp;nbsp;Purchase&lt;/h3&gt;
&lt;p&gt;You can purchase the book at following sources &lt;br&gt;
&lt;a href="http://www.amazon.com/dp/0815394373"&gt;&lt;img alt="Introduction to Python Programming" src="../images/article_1_image_2.jpg"&gt;&lt;/a&gt; &lt;br&gt;
​  &lt;br&gt;
&lt;a href="https://www.crcpress.com/Introduction-to-Python-Programming/S-A/p/book/9780815394372"&gt;&lt;img alt="Introduction to Python Programming" src="../images/article_1_image_3.jpg"&gt;&lt;/a&gt;    &lt;/p&gt;
&lt;h3&gt;Book&amp;nbsp;Details&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Hardcover:&lt;/strong&gt; 464 pages&lt;br&gt;
&lt;strong&gt;Publisher:&lt;/strong&gt; Chapman and Hall/&lt;span class="caps"&gt;CRC&lt;/span&gt; Press; 1 edition (November 7, 2018)  &lt;br&gt;
&lt;strong&gt;Language:&lt;/strong&gt; English &lt;br&gt;
&lt;strong&gt;&lt;span class="caps"&gt;ISBN&lt;/span&gt;-10:&lt;/strong&gt; 0815394373 &lt;br&gt;
&lt;strong&gt;&lt;span class="caps"&gt;ISBN&lt;/span&gt;-13:&lt;/strong&gt;&amp;nbsp;978-0815394372   &lt;/p&gt;
&lt;h3&gt;Software&amp;nbsp;Requirements&lt;/h3&gt;
&lt;p&gt;All the code in the book works with Python 3.6 version or above. Since &lt;em&gt;&lt;strong&gt;f&lt;/strong&gt;&lt;/em&gt;-strings are used throughout the book which was introduced in Python 3.6 version, you need to have Python interpreter 3.6 or above for the code to work as it is. Install the latest version of 64-bit Anaconda Distribution with support for Python 3.6 or above. If you want to make the code work with Python 3.1 to 3.5 versions, use str.format() statements within the print() function instead of f-strings. The rest of the statements within the code remains the same and the code should work fine. It is highly recommended that you use the latest version of PyCharm Community Edition to execute the programs. You will gain valuable insights in to Python programming language by using this &lt;span class="caps"&gt;IDE&lt;/span&gt;, no matter whether you are a beginner or an experienced&amp;nbsp;professional.  &lt;/p&gt;
&lt;h3&gt;Book Source&amp;nbsp;Code&lt;/h3&gt;
&lt;p&gt;You need to download the folder &lt;a href="https://github.com/gowrishankarnath/Introduction_To_Python_Programming/tree/master/Book_Code" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Book_Code&lt;/font&gt;&lt;/a&gt; and open it in PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt;. Each of the code files are numbered and they appear under a Chapter number. The numbering of the code files corresponds to the order in which they appear in the book. Each of the code file is a self-contained file. To run a code file, right-click on the file name in the PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; and select the &amp;#8220;Run&amp;#8221; from the context&amp;nbsp;menu.  &lt;/p&gt;
&lt;h3&gt;Who Should Read This&amp;nbsp;Book?&lt;/h3&gt;
&lt;p&gt;This book is for beginners to Python programming who are interested in learning the basics of Python programming&amp;nbsp;language.   &lt;/p&gt;
&lt;h3&gt;Citing this&amp;nbsp;Book&lt;/h3&gt;
&lt;p&gt;You are very welcome to re-use the code snippets for academic purpose; in this case, we would appreciate citations to the original&amp;nbsp;source:   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BibTeX:&lt;/strong&gt; &lt;br&gt;
@Book{gsva2018python, &lt;br&gt;
 author = {Gowrishankar S., Veena A.}, &lt;br&gt;
 title = {Introduction to Python Programming}, &lt;br&gt;
 publisher = {Chapman and Hall/&lt;span class="caps"&gt;CRC&lt;/span&gt; Press}, &lt;br&gt;
 year = {2018}, &lt;br&gt;
 address = {Boca Raton, &lt;span class="caps"&gt;USA&lt;/span&gt;}, &lt;br&gt;
 isbn = {0815394373} &lt;br&gt;&amp;nbsp;}   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;MLA&lt;/span&gt;:&lt;/strong&gt; &lt;br&gt;
S, Gowrishankar, and A, Veena. Introduction to Python Programming. Chapman &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Hall/&lt;span class="caps"&gt;CRC&lt;/span&gt; Press,&amp;nbsp;2018.   &lt;/p&gt;
&lt;h3&gt;Contributing to the&amp;nbsp;book&lt;/h3&gt;
&lt;p&gt;Please don&amp;#8217;t make pull requests here. I don&amp;#8217;t accept pull requests on this repository. If you notice an issue, please file an &lt;a href="https://github.com/gowrishankarnath/Introduction_To_Python_Programming/issues" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;issue&lt;/font&gt;&lt;/a&gt;&amp;nbsp;instead.  &lt;/p&gt;
&lt;h3&gt;Errata&lt;/h3&gt;
&lt;p&gt;We hope to improve this book continually. If you have any suggestions for improving this text or if an error should be found, the authors would be grateful if notification were sent by e-mail to &lt;strong&gt;gowrishankarnath@acm.org&lt;/strong&gt;. To ensure your messages do not end up in our junk mail folder, please include subject as “Introduction to Python Programming.” You can see a list of known issues that have been found in each chapter by looking at &lt;a href="https://github.com/gowrishankarnath/Introduction_To_Python_Programming/tree/master/Errata" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;Errata&lt;/font&gt;&lt;/a&gt; and the corresponding corrections. If you found a mistake and don&amp;#8217;t see it listed there, please create a new &lt;a href="https://github.com/gowrishankarnath/Introduction_To_Python_Programming/issues" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;issue&lt;/font&gt;&lt;/a&gt;. Thank you for your&amp;nbsp;help!  &lt;/p&gt;
&lt;h3&gt;Contact&lt;/h3&gt;
&lt;p&gt;If you are interested in keeping in touch, I am active on twitter and my id is  &lt;a href="https://twitter.com/g_s_nath" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;@g_s_nath&lt;/font&gt;&lt;/a&gt;.   &lt;/p&gt;
&lt;h3&gt;Table of&amp;nbsp;Contents&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. Introduction&lt;/strong&gt; &lt;br&gt;
1.1 What Is a Program? &lt;br&gt;
1.2 Programming Languages &lt;br&gt;
1.3 Software Development &lt;br&gt;
1.4 History of Python Programming Language &lt;br&gt;
1.5 Thrust Areas of Python&lt;br&gt;
1.6 Installing Anaconda Python Distribution &lt;br&gt;
1.7 Installing PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; to Set Up a Python Development Environment &lt;br&gt;
1.8 Creating and Running Your First Python Project &lt;br&gt;
1.9 Installing and Using Jupyter Notebook&lt;br&gt;
1.10 Open Source Software &lt;br&gt;
1.11 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;2. Parts of Python Programming Language&lt;/strong&gt; &lt;br&gt;
2.1 Identifiers &lt;br&gt;
2.2 Keywords &lt;br&gt;
2.3 Statements and Expressions &lt;br&gt;
2.4 Variables &lt;br&gt;
2.5 Operators &lt;br&gt;
2.6 Precedence and Associativity &lt;br&gt;
2.7 Data Types &lt;br&gt;
2.8 Indentation &lt;br&gt;
2.9 Comments &lt;br&gt;
2.10 Reading Input &lt;br&gt;
2.11 Print Output &lt;br&gt;
2.12 Type Conversions &lt;br&gt;
2.13 The type() Function and Is Operator &lt;br&gt;
2.14 Dynamic and Strongly Typed Language &lt;br&gt;
2.15 Summary   &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions   &lt;br&gt;
&lt;strong&gt;3. Control Flow Statements&lt;/strong&gt;     &lt;br&gt;
3.1 The if Decision Control Flow Statement   &lt;br&gt;
3.2 The if…else Decision Control Flow Statement &lt;br&gt;
3.3 The if…elif…else Decision Control Statement &lt;br&gt;
3.4 Nested if Statement &lt;br&gt;
3.5 The while Loop &lt;br&gt;
3.6 The for Loop &lt;br&gt;
3.7 The continue and break Statements &lt;br&gt;
3.8 Catching Exceptions Using try and except Statement   &lt;br&gt;
3.9 Summary   &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions&lt;br&gt;
&lt;strong&gt;4. Functions&lt;/strong&gt; &lt;br&gt;
4.1 Built-In Functions &lt;br&gt;
4.2 Commonly Used Modules&lt;br&gt;
4.3 Function Definition and Calling the Function&lt;br&gt;
4.4 The return Statement and void Function &lt;br&gt;
4.5 Scope and Lifetime of Variables &lt;br&gt;
4.6 Default Parameters&lt;br&gt;
4.7 Keyword Arguments &lt;br&gt;
4.8 *args and **kwargs   &lt;br&gt;
4.9 Command Line Arguments &lt;br&gt;
4.10 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;5. Strings&lt;/strong&gt; &lt;br&gt;
5.1 Creating and Storing Strings &lt;br&gt;
5.2 Basic String Operations &lt;br&gt;
5.3 Accessing Characters in String by Index Number &lt;br&gt;
5.4 String Slicing and Joining &lt;br&gt;
5.5 String Methods &lt;br&gt;
5.6 Formatting Strings &lt;br&gt;
5.7 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;6. Lists&lt;/strong&gt;&lt;br&gt;
6.1 Creating Lists &lt;br&gt;
6.2 Basic List Operations &lt;br&gt;
6.3 Indexing and Slicing in Lists &lt;br&gt;
6.4 Built-In Functions Used on Lists &lt;br&gt;
6.5 List Methods &lt;br&gt;
6.6 The del Statement &lt;br&gt;
6.7 Summary &lt;br&gt;
Multiple-Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;7. Dictionaries&lt;/strong&gt; &lt;br&gt;
7.1 Creating Dictionary &lt;br&gt;
7.2 Accessing and Modifying key:value Pairs in Dictionaries &lt;br&gt;
7.3 Built-In Functions Used on Dictionaries &lt;br&gt;
7.4 Dictionary Methods &lt;br&gt;
7.5 The del Statement &lt;br&gt;
7.6 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;8. Tuples and Sets&lt;/strong&gt;&lt;br&gt;
8.1 Creating Tuples &lt;br&gt;
8.2 Basic Tuple Operations &lt;br&gt;
8.3 Indexing and Slicing in Tuples &lt;br&gt;
8.4 Built-In Functions Used on Tuples &lt;br&gt;
8.5 Relation between Tuples and Lists &lt;br&gt;
8.6 Relation between Tuples and Dictionaries &lt;br&gt;
8.7 Tuple Methods &lt;br&gt;
8.8 Using zip() Function &lt;br&gt;
8.9 Sets &lt;br&gt;
8.10 Set Methods &lt;br&gt;
8.10.1 Traversing of Sets&lt;br&gt;
8.11 Frozenset &lt;br&gt;
8.12 Summary &lt;br&gt;
Multiple Choice&lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;9. Files&lt;/strong&gt; &lt;br&gt;
9.1 Types of Files &lt;br&gt;
9.2 Creating and Reading Text Data &lt;br&gt;
9.3 File Methods to Read and Write Data &lt;br&gt;
9.4 Reading and Writing Binary Files &lt;br&gt;
9.5 The Pickle Module &lt;br&gt;
9.6 Reading and Writing &lt;span class="caps"&gt;CSV&lt;/span&gt; Files &lt;br&gt;
9.7 Python os and os.path Modules &lt;br&gt;
9.8 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;10. Regular Expression Operations&lt;/strong&gt;&lt;br&gt;
10.1 Using Special Characters &lt;br&gt;
10.2 Regular Expression Methods &lt;br&gt;
10.3 Named Groups in Python Regular Expressions &lt;br&gt;
10.4 Regular Expression with glob Module &lt;br&gt;
10.5 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;11. Object-Oriented Programming&lt;/strong&gt; &lt;br&gt;
11.1 Classes and Objects &lt;br&gt;
11.2 Creating Classes in Python &lt;br&gt;
11.3 Creating Objects in Python &lt;br&gt;
11.4 The Constructor Method &lt;br&gt;
11.5 Classes with Multiple Objects &lt;br&gt;
11.6 Class Attributes versus Data Attributes &lt;br&gt;
11.7 Encapsulation &lt;br&gt;
11.8 Inheritance &lt;br&gt;
11.9 The Polymorphism     &lt;br&gt;
11.10 Summary   &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review Questions &lt;br&gt;
&lt;strong&gt;12. Introduction to Data Science&lt;/strong&gt; &lt;br&gt;
12.1 Functional Programming &lt;br&gt;
12.2 &lt;span class="caps"&gt;JSON&lt;/span&gt; and &lt;span class="caps"&gt;XML&lt;/span&gt; in Python &lt;br&gt;
12.3 NumPy with Python &lt;br&gt;
12.4 Pandas &lt;br&gt;
12.5 Altair &lt;br&gt;
12.6 Summary &lt;br&gt;
Multiple Choice Questions &lt;br&gt;
Review&amp;nbsp;Questions    &lt;/p&gt;</content><category term="Python"></category><category term="CRC Press"></category><category term="Book"></category></entry><entry><title>Python Application Programming Course Material VTU, Belagavi</title><link href="https://www.gowrishankarnath.com/python-application-programming-course-material-vtu-belagavi.html" rel="alternate"></link><published>2018-02-04T23:30:00+05:30</published><updated>2019-05-13T17:00:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2018-02-04:/python-application-programming-course-material-vtu-belagavi.html</id><summary type="html">&lt;p&gt;Course material for Python Application Programming, &lt;span class="caps"&gt;VTU&lt;/span&gt;,&amp;nbsp;Belagavi.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have uploaded the course material for &lt;strong&gt;“Python Application Programming”,&lt;/strong&gt; (&lt;span class="caps"&gt;18CS653&lt;/span&gt;, Open Elective) as prescribed by Visvesvaraya Technological University, Belagavi popularly known as &lt;span class="caps"&gt;VTU&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;You will find slide deck (ppts) for all the units with programming examples &lt;a href="https://github.com/gowrishankarnath/Python-Application-Programming-Course-Material-VTU-Belagavi" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;here&lt;/font&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, few model question papers are provided for&amp;nbsp;reference.  &lt;/p&gt;</content><category term="Python"></category><category term="VTU"></category></entry><entry><title>Remote Programming of Raspberry Pi using PyCharm</title><link href="https://www.gowrishankarnath.com/remote-programming-of-raspberry-pi-using-pycharm.html" rel="alternate"></link><published>2016-12-19T23:00:00+05:30</published><updated>2019-01-08T14:23:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2016-12-19:/remote-programming-of-raspberry-pi-using-pycharm.html</id><summary type="html">&lt;p&gt;This tutorial is about using PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; on a Windows machine to remotely execute Python programs on Raspberry&amp;nbsp;Pi.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This tutorial is about using PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; on a Windows machine to remotely execute Python 2.7 programs on Raspberry Pi. Despite my best efforts, I could not find a step by step tutorial on how to remotely connect PyCharm to Raspberry Pi and use the Raspberry Pi python interpreter to execute the programs. So I’m listing out the steps here. This tutorial is tested on a Windows 10 machine and Raspberry Pi running Raspbian &lt;span class="caps"&gt;OS&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Ensure the Windows Machine and Raspberry Pi are part of the same&amp;nbsp;Network.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install PyCharm Professional Edition on your Windows&amp;nbsp;machine.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; You need to get the &lt;span class="caps"&gt;IP&lt;/span&gt; Address of Raspberry Pi. To do so, open the Terminal window on raspberry pi and type the following command &lt;strong&gt;&lt;em&gt;ifconfig&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_3_image_1.png"&gt;   &lt;/p&gt;
&lt;p&gt;As can be seen from the screenshot, Raspberry Pi is connected to the Wireless &lt;span class="caps"&gt;LAN&lt;/span&gt; and the address is 172.16.2.100. It may vary on your Raspberry Pi. Make a note of this&amp;nbsp;address.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Once you have obtained the Address, go to your home directory and create a folder as shown in the below screenshot. This folder is used to store the Python&amp;nbsp;programs.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_2" src="../images/article_3_image_2.png"&gt;   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Invoke your PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt;. Create a new Project. Go to File &amp;#8212;&amp;gt; New Project &amp;#8212;&amp;gt; Pure Python &amp;#8212;&amp;gt; Give a Project Name. In my case it is&amp;nbsp;RaspberryPiProject.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Right Click on RaspberryPiProject and select New &amp;#8212;&amp;gt; Python File and give a name to python file. In my case it is&amp;nbsp;rasp.py  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Write the line &lt;strong&gt;print &amp;#8220;Hello RaspberryPi&amp;#8221;&lt;/strong&gt; in the&amp;nbsp;editor.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Now go to File  &amp;#8212;&amp;gt;&amp;nbsp;Settings  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_3" src="../images/article_3_image_3.png"&gt;   &lt;/p&gt;
&lt;p&gt;On the left pane of the window you should see Project:RaspberryPiProject. (If you have given a different name then it may differ from what is displayed here) Expand it and Click on Project&amp;nbsp;Interpreter  &lt;/p&gt;
&lt;p&gt;On the right pane of the window, click at the end of Project Interpreter and select Add Remote option as shown&amp;nbsp;below.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_4" src="../images/article_3_image_4.png"&gt;   &lt;/p&gt;
&lt;p&gt;A Remote Python Interpreter window pops&amp;nbsp;up.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt; Configure the Remote Python Interpreter&amp;nbsp;window.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_5" src="../images/article_3_image_5.png"&gt;   &lt;/p&gt;
&lt;p&gt;Write the &lt;span class="caps"&gt;IP&lt;/span&gt; address of the Raspberry Pi you earlier made note of in the Host option. Give the user name and password. Specify the Python interpreter path on raspberry pi. Click &lt;span class="caps"&gt;OK&lt;/span&gt;. Now you should see the Python Interpreter found in Raspberry&amp;nbsp;Pi.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_6" src="../images/article_3_image_6.png"&gt;   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 10:&lt;/strong&gt;  Now go to Tools &amp;#8212;&amp;gt; Deployment &amp;#8212;&amp;gt; Configuration and click on + sign on the left pane. You should see a&amp;nbsp;window.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_7" src="../images/article_3_image_7.png"&gt;   &lt;/p&gt;
&lt;p&gt;At this stage Raspberry Pi will be treated as a Server machine. Give a name to your Raspberry Pi server (in my case it is GS_Research) and select the type as &lt;span class="caps"&gt;SFTP&lt;/span&gt; and click &lt;span class="caps"&gt;OK&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 11:&lt;/strong&gt; Click on the Connections tab and specify the &lt;span class="caps"&gt;IP&lt;/span&gt; address of the Raspberry Pi again in &lt;span class="caps"&gt;SFTP&lt;/span&gt;&amp;nbsp;host  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_8" src="../images/article_3_image_8.png"&gt;   &lt;/p&gt;
&lt;p&gt;Leave the port and Root path as it is. Specify the User Name and&amp;nbsp;Password  &lt;/p&gt;
&lt;p&gt;Then click on Mappings&amp;nbsp;tab.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_9" src="../images/article_3_image_9.png"&gt;   &lt;/p&gt;
&lt;p&gt;Specify the local path where you have stored the python project in the Windows machine. Then specify the path which we had created to store the Python programs on raspberry pi i.e., &lt;strong&gt;/home/pi/pywork&lt;/strong&gt; and click &lt;span class="caps"&gt;OK&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 12:&lt;/strong&gt; Now we need to upload the Python file created on a Windows machine on to Raspberry Pi and compile the program using Raspberry Pi Python&amp;nbsp;Interpreter.  &lt;/p&gt;
&lt;p&gt;Go to Tools &amp;#8212;&amp;gt; Deployment &amp;#8212;&amp;gt; Upload to&amp;nbsp;GS_Research.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_10" src="../images/article_3_image_10.png"&gt;   &lt;/p&gt;
&lt;p&gt;Remember, here GS_Research is the name given to the Raspberry Pi server. At the bottom pane, you can see that the file is successfully&amp;nbsp;uploaded.  &lt;/p&gt;
&lt;p&gt;Now open the terminal window again on the Raspberry Pi and go to the path where you intended to store Python programs. If you have followed the instructions then the path is /home/pi/pywork. You should see the rasp.py file in&amp;nbsp;there.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 13:&lt;/strong&gt; You need to sync the Python code with Raspberry Pi as and when you write your code in PyCharm. To do that go to Tools &amp;#8212;&amp;gt; Deployment &amp;#8212;&amp;gt; Sync with Deployed to&amp;nbsp;GS_Research.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_11" src="../images/article_3_image_11.png"&gt;   &lt;/p&gt;
&lt;p&gt;Happy&amp;nbsp;Coding…  &lt;/p&gt;</content><category term="Python"></category><category term="Raspberry Pi"></category><category term="PyCharm"></category><category term="Remote Programming"></category></entry><entry><title>Traverse and Rename files in folder</title><link href="https://www.gowrishankarnath.com/traverse-and-rename-files-in-folder.html" rel="alternate"></link><published>2016-05-11T23:30:00+05:30</published><updated>2019-01-10T20:30:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2016-05-11:/traverse-and-rename-files-in-folder.html</id><summary type="html">&lt;p&gt;This article is about traversing and renaming of files in a&amp;nbsp;folder&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently encountered a problem wherein I had to traverse through all the files in a folder and rename each&amp;nbsp;file.    &lt;/p&gt;
&lt;p&gt;The original files is as shown below having a set of characters and the number separated by an &amp;#8220;-&amp;#8221; (hyphen) with jpg&amp;nbsp;extension.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d6445cef9361a2bf-1.jpg&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d6445cef9361a2bf-2.jpg&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d6445cef9361a2bf-3.jpg and so&amp;nbsp;on.&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Here, the requirement was to remove the left part of the “-” (hyphen) and retain only the number and the&amp;nbsp;extension.  &lt;/p&gt;
&lt;p&gt;So, here is my&amp;nbsp;approach.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pathFromUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter the Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;files_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pathFromUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;each_file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;each_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;each_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In line 4, we ask the user to enter the path for the folder which contains all the files. In line 5, a list of all the files in the folder is assigned to the list called &lt;em&gt;files_list&lt;/em&gt;. One should be aware that it’s not only the filename but a combination of both path and filename i.e., C:\foldername\d6445cef9361a2bf-1.jpg. In line 6, we loop through each file in the list. In line 7, the &lt;em&gt;basename()&lt;/em&gt; method is used to obtain the name of the file from the path and then we split the filename based on &amp;#8220;-&amp;#8221; (hyphen) and we again split the resultant value based on &amp;#8220;.&amp;#8221; (dot). This line results in a number present in the file and is assigned to the variable number. Then we use the method &lt;em&gt;rename()&lt;/em&gt; to rename each file to the value that is present in the&amp;nbsp;number.&lt;/p&gt;</content><category term="Python"></category><category term="Files"></category><category term="Folders"></category></entry><entry><title>MySQL Programming with Python using MySQL Python Connector</title><link href="https://www.gowrishankarnath.com/mysql-programming-with-python-using-mysql-python-connector.html" rel="alternate"></link><published>2015-11-28T07:49:00+05:30</published><updated>2019-05-26T17:05:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2015-11-28:/mysql-programming-with-python-using-mysql-python-connector.html</id><summary type="html">&lt;p&gt;This article is about programming MySQL with Python using MySQL Python&amp;nbsp;Connector.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This article is about programming MySQL with Python using MySQL Python Connector. MySQL is a popular Open Source Database that finds its way in the software stack of almost all newer billion dollar companies. Let’s try to do some basic operations like  &lt;em&gt;Insert&lt;/em&gt;, &lt;em&gt;Read&lt;/em&gt;, &lt;em&gt;Update&lt;/em&gt; and &lt;em&gt;Delete&lt;/em&gt;. For creating the database schema we have used MySQL workbench, even though it is fully possible to do the same programmatically using Python and the MySQL Python&amp;nbsp;Connector.  &lt;/p&gt;
&lt;p&gt;For our article I have considered this below database schema. You can read more about designing this schema &lt;a href="https://gowrishankarnath.github.io/designing-database-schema-using-mysql-workbench.html" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;here&lt;/font&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_9_image_1.png"&gt;  &lt;/p&gt;
&lt;p&gt;The illustrated code has been tested on Python 3.5 with MySQL Python&amp;nbsp;Connector.  &lt;/p&gt;
&lt;h3&gt;MySQL Programming With Python Using MySQL Python&amp;nbsp;Connector&lt;/h3&gt;
&lt;p&gt;Install the latest version of MySQL Python Connector as shown&amp;nbsp;below  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_2" src="../images/article_9_image_2.png"&gt;  &lt;/p&gt;
&lt;p&gt;In line 1, we import mysql.connector module. In line 2 we also import the errorcode class which can be used to various errors related to Database&amp;nbsp;query.  &lt;/p&gt;
&lt;p&gt;In line 3-4 we import faker module and create fake object. The reason for using this awesome module is I wanted to have some real world values generated for me instead of writing the values manually. You can read more about &lt;strong&gt;faker&lt;/strong&gt; module &lt;a href="https://gowrishankarnath.github.io/generate-fake-data-programmatically-using-faker-with-python.html" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;here&lt;/font&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;You need to declare and provide values for &lt;em&gt;user&lt;/em&gt;, &lt;em&gt;password&lt;/em&gt;, &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;database&lt;/em&gt; and &lt;em&gt;raise_on_warnings&lt;/em&gt;. Here, &lt;em&gt;config&lt;/em&gt; is declared as a dictionary. You need to pass this config dictionary to connect method as an argument (see &lt;strong&gt;**&lt;/strong&gt; in the connect method). In line 21 we create cursor object which can be used to execute the Database query. We write a query to insert a row to the &lt;em&gt;contactperson&lt;/em&gt; table. The query is stored in the variable &lt;em&gt;addContactPerson&lt;/em&gt; which is passed to the execute method as an argument.  In this program we will use an for loop to insert ten rows. Once we have performed our operation we need to close the &lt;em&gt;cnx&lt;/em&gt; and &lt;em&gt;cursor&lt;/em&gt;&amp;nbsp;objects.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mysql123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;database&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;contactmanagerapplication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;raise_on_warnings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#This is the most efficient way of toggling between the values&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Male&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#next(toggle)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#Let&amp;#39;s insert ten rows to contactperson table&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;contactPersonID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name_male&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#generate fake first name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name_male&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#generate fake middle name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;middleName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name_male&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#generate fake last name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;dateOfBirth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#generate fake DOB&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;contactPersonType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;#In SQL statement the values need to be enclosed within double quotes&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;#I&amp;#39;m providing the same by explicity specifying double quotes and removing it&amp;#39;s special meaning&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;addContactPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;INSERT INTO contactmanagerapplication.contactperson(&amp;quot;&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                           &lt;span class="s2"&gt;&amp;quot;ContactPersonID, FirstName, MiddleName, LastName, DateOfBirth,&amp;quot;&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                           &lt;span class="s2"&gt;&amp;quot;ContactPersonType)VALUES({},&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactPersonID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;middleName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dateOfBirth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;contactPersonType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addContactPerson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_ACCESS_DENIED_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Something is wrong with your user name or password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_BAD_DB_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Database does not exist&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the below code we select and display all the rows from the &lt;em&gt;contactperson&lt;/em&gt; table. Once we have composed and executed the select query, we have to use the cursor object along with for loop to display all the&amp;nbsp;rows.  &lt;/p&gt;
&lt;p&gt;In line 19, we specify variable names that correspond to the attributes in the table &lt;em&gt;contactperson&lt;/em&gt;. We then use these variable names to display the&amp;nbsp;values.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mysql123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;database&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;contactmanagerapplication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;raise_on_warnings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#Let&amp;#39;s read all the rows in the table&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;readContactPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;select * from contactmanagerapplication.contactperson&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readContactPerson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#specify the attributes that you want to display&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactPersonID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;middleName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dateOfBirth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;contactPersonType&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{}, {}, {}, {}, {}, {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactPersonID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;middleName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dateOfBirth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;contactPersonID&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_ACCESS_DENIED_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Something is wrong with your user name or password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_BAD_DB_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Database does not exist&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below code asks the user to enter the &lt;em&gt;contactPersonID&lt;/em&gt; number which needs to be deleted. Based on the value that the user has entered the related row gets deleted in the&amp;nbsp;table.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mysql123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;database&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;contactmanagerapplication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;raise_on_warnings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;contactPersonID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter the ContactPersonID to be deleted&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#Let&amp;#39;s remove a row in contactperson table by specifying the contactPersonID&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;deleteContactPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DELETE FROM contactmanagerapplication.contactperson where ContactPersonID = {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactPersonID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deleteContactPerson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_ACCESS_DENIED_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Something is wrong with your user name or password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_BAD_DB_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Database does not exist&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below code is used to update an attribute of a particular row based on user&amp;nbsp;input.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mysql.connector&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mysql123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;database&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;contactmanagerapplication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;raise_on_warnings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;contactPersonID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Enter the Contact Person ID whose records needs to be updated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name_male&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#generate fake first name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#Let&amp;#39;s update a row in contactperson table by specifying the contactPersonID&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;updateContactPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UPDATE contactmanagerapplication.contactperson SET FirstName = &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; WHERE ContactPersonID = {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contactPersonID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;updateContactPerson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_ACCESS_DENIED_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Something is wrong with your user name or password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errorcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ER_BAD_DB_ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Database does not exist&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cnx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;As you can see with few lines of Python code we can perform various database&amp;nbsp;operations.  &lt;/p&gt;
&lt;p&gt;You can find the source code for all the programs discussed&amp;nbsp;@  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/gowrishankarnath/MySqlProgrammingWithPython" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;https://github.com/gowrishankarnath/MySqlProgrammingWithPython&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="MySQL"></category><category term="Python"></category><category term="Database"></category></entry><entry><title>Generate Fake Data Programmatically Using Faker With Python</title><link href="https://www.gowrishankarnath.com/generate-fake-data-programmatically-using-faker-with-python.html" rel="alternate"></link><published>2015-11-23T23:30:00+05:30</published><updated>2019-05-26T16:51:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2015-11-23:/generate-fake-data-programmatically-using-faker-with-python.html</id><summary type="html">&lt;p&gt;This article is about generating fake data using &lt;span class="caps"&gt;FAKER&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Recently, I had a requirement to fill the database with some data. Filling the tables manually proved to be very tedious enough. So, I was looking for some software that could do the heavy lifting for me and also that could be used with Python natively. Voila!! After a bit of search came across this awesome&amp;nbsp;software.  &lt;/p&gt;
&lt;p align="center"&gt;
&lt;b&gt;&lt;span class="caps"&gt;FAKER&lt;/span&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;Faker can be used to generate fake data which resembles the real world values rather than some gibberish&amp;nbsp;values.  &lt;/p&gt;
&lt;h3&gt;Using &lt;span class="caps"&gt;FAKER&lt;/span&gt; With&amp;nbsp;Python&lt;/h3&gt;
&lt;p&gt;The following code has been tested using Python 3.5 on a Windows 10&amp;nbsp;machine.  &lt;/p&gt;
&lt;p&gt;Type the below command in the Command Prompt to install Faker&amp;nbsp;module  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Installing Faker" src="../images/article_2_image_1.png"&gt;   &lt;/p&gt;
&lt;p&gt;Let’s start with a very simple&amp;nbsp;example.  &lt;/p&gt;
&lt;p&gt;Import the faker module and make use of the Factory Class. Use create() method to create an object called fake. Say, if you want to print a name then use the object fake along with name() method as shown&amp;nbsp;below.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;Mrs. Kenley Farrell&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;You can even localize the names according to your preferences. For e.g, if you want to display name in Hindi (India), then pass the string argument “hi_IN” to create()&amp;nbsp;method.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hi_IN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ouput&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;रचना बाबू&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;If you want to display 10 random&amp;nbsp;currencies&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currency_code&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;MWK
MRO
KES
TOP
IQD
MYR
PGK
MDL
NIO
MNT&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;You can randomly generate addresses using address() method. Below code is localized for&amp;nbsp;“en_US”.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en_US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;PSC 7452, Box 9044
APO AA 06906-4518
65264 Vince Points Suite 897
North Pearlene, PA 66031
63876 Daijah Pass
New Rickiland, NM 82820
59116 Mueller Port
South Rosanne, IN 07663
486 Jerde Forest
New Keyshawnfort, GA 59913-5859
360 Orie Forge
Lake Izayah, NY 83459-8476
1840 O’Connell Field Apt. 566
Port Zakaryton, HI 66433-8319
PSC 2512, Box 6095
APO AP 37389
89957 Williamson Burg Apt. 255
Shelliview, WY 06711-9241
78580 Vanessa Square Apt. 095
West Sherie, CT 67665&lt;/code&gt;    &lt;/p&gt;
&lt;p&gt;You can generate various information about a person using different methods as shown&amp;nbsp;below.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en_US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name_male&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_female&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prefix_male&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;suffix_female&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_male&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;suffix_male&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name_male&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name_female&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name_female&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prefix_female&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;Morar
Dr. Mckinley Halvorson
Dr.
Mrs.
Kadeem Parker
MD
Mr. Elliott Padberg
Elvira
III
IV
Arley
Mariam
Turner
Huel
Ms.&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;You can read various methods available in Faker Module in detail&amp;nbsp;@  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://faker.readthedocs.io/en/master/#" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;https://faker.readthedocs.io/en/master/#&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find the above code&amp;nbsp;@   &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/gowrishankarnath/FakerPythonExamples" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;https://github.com/gowrishankarnath/FakerPythonExamples&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Faker"></category></entry><entry><title>Using pytest Testing Tool to test Python Code by Configuring PyCharm IDE</title><link href="https://www.gowrishankarnath.com/using-pytest-testing-tool-to-test-python-code-by-configuring-pycharm-ide.html" rel="alternate"></link><published>2015-10-28T13:30:00+05:30</published><updated>2019-01-08T23:12:00+05:30</updated><author><name>Gowrishankar S.</name></author><id>tag:www.gowrishankarnath.com,2015-10-28:/using-pytest-testing-tool-to-test-python-code-by-configuring-pycharm-ide.html</id><summary type="html">&lt;p&gt;This article is about testing Python code using pytest Testing tool by configuring the PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The aim of this article is to bring all the related information of configuring the PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; with pytest Testing Tool in one place. Here, I’ll not dwell deep into how testing is done in Python. But I’ll discuss the proper way of configuring PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; with pytest testing tool to get the things up and running. This article is tested on a Windows 10 machine running PyCharm Professional Edition 4.5 with Python 2.7.9&amp;nbsp;interpreter.  &lt;/p&gt;
&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;PyCharm is a popular &lt;span class="caps"&gt;IDE&lt;/span&gt; for Python Programming. More information about PyCharm can be obtained at &lt;a href="https://www.jetbrains.com/pycharm/" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;https://www.jetbrains.com/pycharm/&lt;/font&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;As a rule, the code we develop should be thoroughly tested before its release. Testing is a very important topic and has been discussed in great detail in the fine material. More information about pytest testing tool can be obtained at &lt;a href="http://pytest.org/" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;http://pytest.org/.&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To gain more knowledge about testing techniques in general please refer to below&amp;nbsp;books.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clean Code: A Handbook of Agile Software&amp;nbsp;Craftsmanship  &lt;/li&gt;
&lt;li&gt;Agile Testing: A Practical Guide for Testers and Agile&amp;nbsp;Teams  &lt;/li&gt;
&lt;li&gt;Software Testing: A Craftsman’s Approach, Fourth&amp;nbsp;Edition  &lt;/li&gt;
&lt;li&gt;Pragmatic Unit Testing in Java 8 with&amp;nbsp;JUnit  &lt;/li&gt;
&lt;li&gt;Practical Unit Testing with JUnit and&amp;nbsp;Mockito  &lt;/li&gt;
&lt;li&gt;Effective Unit Testing: A guide for Java&amp;nbsp;developers  &lt;/li&gt;
&lt;li&gt;The Art of Unit Testing: with Examples in .&lt;span class="caps"&gt;NET&lt;/span&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Even though some of these books target other programming languages, still the knowledge that you gain from reading these books can be applied to Python Testing&amp;nbsp;also.  &lt;/p&gt;
&lt;h3&gt;Steps Involved in Configuring PyCharm to work with pytest Testing&amp;nbsp;Tool&lt;/h3&gt;
&lt;p&gt;Here I assume that you have already configured your PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; to run Python Interpreter. If not, you can download anaconda from &lt;a href="https://www.anaconda.com/distribution/" target="_blank" style="color: rgb(6,69,173)"&gt;&lt;font color="#0066CC"&gt;https://www.anaconda.com/distribution/&lt;/font&gt;&lt;/a&gt; and use it to configure the Python interpreter in PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt;.   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; In order to follow this tutorial, create a folder called &lt;strong&gt;PyArticle&lt;/strong&gt; in C: drive. Install &lt;strong&gt;pytest&lt;/strong&gt; testing tool using &lt;strong&gt;pip&lt;/strong&gt; command as shown&amp;nbsp;below.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_1.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Invoke PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; and go to File -&amp;gt; New Project. Specify the path to the folder you created and also specify the name of the project. In our case the name of the project is TestExample. Press Create button. This takes you to the PyCharm&amp;nbsp;editor.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_2.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Right Click on TestExample folder on the left pane of the PyCharm editor. Select New -&amp;gt; Python&amp;nbsp;File  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_3.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Give the file name as&amp;nbsp;add_two_numbers  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_4.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Write the below given code in add_two_numbers.py file. This is a very simple code that adds up two numbers and returns the&amp;nbsp;result.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_5.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Now go to File -&amp;gt;&amp;nbsp;Settings  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_6.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; In the Settings window, click on Python Integrated Tools in the right pane and select py.test as the Default test runner. Click on &lt;span class="caps"&gt;OK&lt;/span&gt;&amp;nbsp;button.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_7.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Now right click on TestExample directory and select New -&amp;gt;&amp;nbsp;Directory.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_8.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt; Enter the directory name as Tests. We will have all our test files in a separate directory which is a good&amp;nbsp;practice.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_9.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 10:&lt;/strong&gt; Right click on Tests directory and select New -&amp;gt; Python&amp;nbsp;File.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_10.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 11:&lt;/strong&gt; Give the file name as test_add_two_numbers and click &lt;span class="caps"&gt;OK&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_11.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 12:&lt;/strong&gt; Write the below code in test_add_two_numbers.py file. Notice that the word &lt;strong&gt;test_&lt;/strong&gt; has been prefixed for the test&amp;nbsp;method.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;All test methods should start with&amp;nbsp;test_.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a very important step in the configuration and if the test method doesn’t start with test_ then you won’t be able to get proper&amp;nbsp;output.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;assert&lt;/strong&gt; is used to check whether the condition is True or&amp;nbsp;False.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_12.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 13:&lt;/strong&gt; Go to Run -&amp;gt; Edit&amp;nbsp;Configurations.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_13.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 14:&lt;/strong&gt; In the Run/Debug Configurations window click on the &lt;strong&gt;+&lt;/strong&gt; button found on the upper left corner. Go to Python tests and select py.test. Click &lt;span class="caps"&gt;OK&lt;/span&gt;&amp;nbsp;button.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_14.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 15:&lt;/strong&gt; On the left pane you can see Python tests is created. In the right pane for the &lt;strong&gt;Name&lt;/strong&gt; text box give the value as &lt;strong&gt;py.test in test_add_two_numbers.py&lt;/strong&gt; You should always prefix the Python test file name with the words py.test&amp;nbsp;in.  &lt;/p&gt;
&lt;p&gt;For the Target text box specify the path to the Python test&amp;nbsp;file.  &lt;/p&gt;
&lt;p&gt;For the Working directory text box specify the path to the directory which has the Python test&amp;nbsp;files.  &lt;/p&gt;
&lt;p&gt;Click on &lt;span class="caps"&gt;OK&lt;/span&gt;&amp;nbsp;button.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_15.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 16:&lt;/strong&gt; Right click on the Python test file and select Run. As you can see in the Test Results the green color indicates that the test has successfully&amp;nbsp;passed.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_16.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 17:&lt;/strong&gt; What if you want to specify more than one test method? Lets find out the process to achieve the same. Create another python file called multiply_two_numbers and fill it up with the code shown&amp;nbsp;below.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_17.png"&gt;  &lt;/p&gt;
&lt;p&gt;Create another Python test file called&amp;nbsp;test_queue_example.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_18.png"&gt;  &lt;/p&gt;
&lt;p&gt;Fill it up with the code shown&amp;nbsp;below.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_19.png"&gt;  &lt;/p&gt;
&lt;p&gt;While configuring the Python test file as shown in &lt;strong&gt;Step 13 – 15&lt;/strong&gt; check the &lt;strong&gt;Options&lt;/strong&gt; check box and give the value as &lt;strong&gt;-q&lt;/strong&gt;. Here &lt;strong&gt;q&lt;/strong&gt; stands for&amp;nbsp;queue.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_20.png"&gt;  &lt;/p&gt;
&lt;p&gt;Click on &lt;span class="caps"&gt;OK&lt;/span&gt; button after all the configurations are&amp;nbsp;done.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_21.png"&gt;  &lt;/p&gt;
&lt;p&gt;Now right click on the latest test file and run. As you can see one test got passed while the other got&amp;nbsp;failed.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_22.png"&gt;  &lt;/p&gt;
&lt;p&gt;Change the code in test_queue_example as shown below and run the test program again. You can see that both the tests have&amp;nbsp;passed.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image_1" src="../images/article_7_image_23.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Happy&amp;nbsp;Coding!!!  &lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Points of&amp;nbsp;Interest&lt;/h3&gt;
&lt;p&gt;Testing our code is a very important aspect of software development. Using testing tools like pytest along with PyCharm &lt;span class="caps"&gt;IDE&lt;/span&gt; goes in a long way in developing quality&amp;nbsp;code.  &lt;/p&gt;</content><category term="PyCharm"></category><category term="pytest"></category><category term="Python"></category><category term="Testing"></category></entry></feed>